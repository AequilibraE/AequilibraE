name: Tests on Linux with coverage

on: [pull_request]

jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8' ]
      max-parallel: 20
    steps:
      - uses: actions/checkout@v2
      - name: Set Python environment
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get install libsqlite3-mod-spatialite
          sudo apt-get install -y libspatialite-dev
          pip3 install setuptools --upgrade
          pip3 install -r requirements.txt
          pip3 install pytest
          pip3 install pytest-cov
          sudo ln -s /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite
      - name: Compile library
        run: |
          cd aequilibrae/paths
          python3 setup_Assignment.py build_ext --inplace
          cd ..
          cd ..

      - name: Test
        if: ${{ matrix.python-version != '3.7'}}
        run: |
          python3 -m pytest

      - name: Generate coverage report
        if: ${{ matrix.python-version == '3.7'}}
        run: |
          python3 -m pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        if: ${{ matrix.python-version == '3.7'}}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true
